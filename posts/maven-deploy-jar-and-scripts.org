---
title: maven-assembly-pluginで配布用アーカイブを作成する
published: 2020-11-03 22:04:32
updated: 
tags: java, maven
---
#+OPTIONS: ^:{}
#+OPTIONS: \n:t

Mavenで、アーティファクトと実行用スクリプト等を含んだアーカイブを作成しようとしたとき、
真っ先に思いつくのがmaven-assembly-pluginを使用することだと思う。

今回、 (展開するだけでデプロイできるように) 実行可能jarや実行用スクリプトをアーカイブしようとして、
いくつかハマった箇所があったので、メモしておく。

なお、今回は実行可能jarはuber-jarとはしない (uber-jarとする場合は、maven-shade-pluginが必要になる) 。

@@html:<!--more-->@@

** maven-assembly-pluginとは
   http://maven.apache.org/plugins/maven-assembly-plugin/index.html

   ファイルやディレクトリをかき集めてきて、指定の形式にアーカイブするためのプラグイン。
   今回は、実行可能jarと実行用スクリプトをtar.gz形式でアーカイブする。

   アーカイブ設定は、[[http://maven.apache.org/plugins/maven-assembly-plugin/descriptor-refs.html][事前定義された設定]]を使用する他に、独自定義を使用することもできる。
   前者の場合は ~pom.xml~ に設定を記載するだけで良いが、後者の場合は、 [[http://maven.apache.org/plugins/maven-assembly-plugin/assembly.html][Assembly Descriptor Format]]にしたがって
   設定ファイルを作成する必要がある。
   今回は、スクリプト等の配置も自由に設定したかったため、後者で実行する。
   
** 使用するプロジェクトについて

*** プロジェクト構成
    今回は、 ~maven-archetype-quickstart~ アーキタイプを元に、以下のようなプロジェクト構成とした (テストは省略) 。
    
    #+begin_src sh
    assemblytest
    ├── distribution.xml
    ├── pom.xml
    └── src
        ├── main
        │   └── java
        │       └── com
        │           └── myapp
        │               └── App.java
        ├── shellscript
        │   ├── bin
        │   │   └── test.sh
        │   ├── conf
        │   │   └── common.sh
        │   └── deploy.sh
        └── test
            └── java
                └── com
                    └── myapp
                        └── AppTest.java
    #+end_src

*** アーカイブ構成
    最終的なアーカイブは、以下のような構成になっているようにする。

    #+begin_src sh
    deployment.tar.gz
    ├── app
    │   ├── java
    │   │   ├── assemblytest.jar
    │   │   └── deplib
    │   │       ├── logback-classic-1.1.3.jar
    │   │       ├── logback-core-1.1.3.jar
    │   │       └── slf4j-api-1.7.7.jar
    │   └── script
    │       ├── bin
    │       │   └── test.sh
    │       └── conf
    │           └── common.sh
    └── deploy.sh
    #+end_src

    ~assemblytest.jar~ 内の ~META-INF/MANIFEST.MF~ ファイルにて ~deplib~ 配下のjarにクラスパスを通すことで、
    ~assemblytest.jar~ が実行可能jarとなる。

    デプロイ時は、 ~deploy.sh~ を実行する。そうすると、 ~app/~ がデプロイ先に配置されるようにする。

    デプロイ後、 ~test.sh~ を実行すると、 ~common.sh~ を読み込んでから ~assemblytest.jar~ を実行する。
    (ここではシェルスクリプトやアプリケーションコードの中は見ない)

*** POM
    ~pom.xml~ は以下を参照。

    #+TODO: ここにpom.xmlへのリンクを貼る

    ここで、 ~maven-archetype-quickstart~ から、以下を変更した。
    - 実行時に必要な依存関係として、LogBackを追加 (依存関係が存在するjarでの確認をしたいため)
    - プラグインとして、 ~maven-jar-plugin~ 、 ~maven-assembly-plugin~ を追加 (後述)

*** アーカイブ設定ファイル
    ~distribution.xml~ は、独自定義のアーカイブ設定。ファイル名は任意で、プラグイン設定に記載する。
    ファイルの内容は以下を参照。

    #+TODO: ここにdistribution.xmlへのリンクを貼る

    
** アーカイブ
